name: Web Deploy to Staging

on:
  push:
    branches:
      - staging
      - develop
    paths:
      - 'apps/web/**'
      - '!apps/web/README.md'
      - '!apps/web/.env.example'
  workflow_dispatch:

permissions:
  contents: read
  deployments: write

jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    environment: staging-web
    defaults:
      run:
        working-directory: apps/web
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      
      - name: Setup Vercel CLI
        run: npm install -g vercel@latest
      
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./apps/web
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./apps/web
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VITE_API_URL: ${{ secrets.VITE_API_URL }}
          VITE_PRIVY_APP_ID: ${{ secrets.VITE_PRIVY_APP_ID }}
          VITE_CONTRACT_ADDRESS: ${{ secrets.VITE_CONTRACT_ADDRESS }}
          VITE_NETWORK_ENV: ${{ secrets.VITE_NETWORK_ENV }}
      
      - name: Deploy to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./apps/web
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      
      - name: Create deployment notification
        if: success()
        run: |
          echo "âœ… Web app deployed to STAGING environment"
          echo "Deployment triggered by: ${{ github.actor }}"