{
  "userCommentsDataMapping": {
    "description": "Complete list of comments the authenticated user has posted on Instagram",
    "pageUrl": "https://www.instagram.com/your_activity/interactions/comments",
    "apiEndpoint": "https://www.instagram.com/api/graphql",
    "requestIdentifier": {
      "fb_api_req_friendly_name": "LSPlatformGraphQLLightspeedRequestForIGDQuery",
      "database": 95,
      "method": "POST"
    },
    "criticalInsight": "Every comment in this response represents content the user actively wrote and posted"
  },
  "dataLocation": {
    "responseStructure": "GraphQL response containing user's comments array",
    "primaryDataPath": "data.items",
    "dataType": "Array of user comment objects",
    "paginationPath": "data.page_info",
    "context": "This data is only available when user navigates to their activity/comments page"
  },
  "userDataPoints": [
    {
      "field": "user_comments_list",
      "description": "Array containing all comments the user has posted",
      "dataPath": "data.items",
      "dataStructure": {
        "type": "array",
        "itemStructure": "Each item represents one comment the user posted"
      },
      "fieldsInEachItem": {
        "comment_id": {
          "path": "node.comment.id",
          "description": "Unique identifier of the user's comment",
          "example": "18234567890123456",
          "context": "Track specific comments user posted"
        },
        "comment_text": {
          "path": "node.comment.text",
          "description": "The actual text content USER WROTE",
          "example": "Amazing shot! Where was this taken? üòç",
          "context": "USER'S OWN WORDS - reveals communication style, interests"
        },
        "comment_timestamp": {
          "path": "node.comment.created_at",
          "description": "When USER POSTED this comment",
          "example": 1757599625,
          "context": "Shows user's activity patterns"
        },
        "post_commented_on": {
          "path": "node.media",
          "description": "Post the USER COMMENTED ON",
          "fields": {
            "media_id": "ID of post user engaged with",
            "media_code": "Short code of post",
            "media_type": "Type of content (photo/video/reel)",
            "owner_username": "Creator of the post",
            "caption": "Original post caption"
          },
          "context": "Shows what type of content triggers user engagement"
        },
        "post_owner": {
          "path": "node.media.user",
          "description": "Creator USER INTERACTED WITH",
          "fields": {
            "pk": "Creator's user ID",
            "username": "Creator USER COMMENTED TO",
            "full_name": "Creator's display name"
          },
          "context": "Shows which creators user actively engages with"
        },
        "reply_to": {
          "path": "node.comment.reply_to_comment",
          "description": "If this is a reply to another comment",
          "fields": {
            "comment_id": "Parent comment ID",
            "username": "User being replied to"
          },
          "context": "Shows conversation threads user participates in"
        },
        "mentions": {
          "path": "node.comment.mentions",
          "description": "Users mentioned in USER'S COMMENT",
          "example": ["@friend1", "@brand"],
          "context": "Shows user's social connections"
        },
        "like_count": {
          "path": "node.comment.comment_like_count",
          "description": "Likes on USER'S COMMENT",
          "example": 5,
          "context": "Shows engagement user's comments receive"
        }
      },
      "userContext": "Each item is a comment USER ACTIVELY WROTE AND POSTED"
    },
    {
      "field": "total_comments",
      "description": "Total number of comments user has posted",
      "dataPath": "data.items.length",
      "dataType": "number",
      "context": "Shows user's engagement level on platform"
    },
    {
      "field": "pagination_info",
      "description": "Information for loading more user comments",
      "dataPath": "data.page_info",
      "dataStructure": {
        "has_next_page": "Boolean indicating more comments available",
        "end_cursor": "Token to fetch next batch of user comments"
      },
      "context": "User may have hundreds of comments requiring pagination"
    }
  ],
  "usageContext": {
    "dataAvailability": "Only accessible when user is logged in and visits their activity page",
    "updateFrequency": "List updates in real-time as user posts new comments",
    "privacyNote": "This is private user activity data showing their written content",
    "analyticsValue": "Reveals user's communication style, interests, and social interactions"
  },
  "exampleQuery": {
    "description": "How to identify and extract user comments",
    "steps": [
      "1. Detect page URL contains '/your_activity/interactions/comments'",
      "2. Intercept GraphQL requests with database: 95",
      "3. Parse response.data.items array",
      "4. Each item = one comment user posted",
      "5. Extract comment text, post context, and interactions for analysis"
    ]
  }
}